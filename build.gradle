buildscript {
    ext.spring_boot_version = '1.4.2.RELEASE'
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version")
    }
}

plugins {
    // Gradle git release plugin
    id 'ch.netzwerg.release' version '1.2.0'
}

apply plugin: 'java'
apply plugin: 'spring-boot'

repositories {
    jcenter()
    mavenCentral()
}
dependencies {
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.boot:spring-boot-starter-web'


    //spring boot
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-freemarker")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-security")

    compile("org.springframework.security.oauth:spring-security-oauth2")

    compile 'org.apache.commons:commons-lang3:3.5'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'

    compile 'org.freemarker:freemarker:2.3.23'

    compile('io.springfox:springfox-swagger-ui:2.6.1')
    compile("io.springfox:springfox-swagger2:2.6.1")

    // Mail
    compile "com.sun.mail:javax.mail:1.5.6"

    // dependencies for integration tests
    testCompile 'org.fluentlenium:fluentlenium-assertj:0.13.1'
    testCompile 'com.codeborne:phantomjsdriver:1.3.0'
    testCompile 'org.seleniumhq.selenium:selenium-java:2.53.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'

    integrationTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath

    // override destination for reports for the integration tests
    reports.html.destination = file("${reporting.baseDir}/integrationTests")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}

release {
//  dependsOn build // 'distZip' could e.g be used in combination with the 'application' plugin
  push = true // 'true' would e.g. be useful when triggering the release task on a CI server
  versionSuffix = '' // '.DEV' or '' (empty) could be useful alternatives
  tagPrefix = 'v' // 'r' or '' (empty) could be useful alternatives
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime

    testCompile {
        exclude module: 'selenium-safari-driver'
        exclude module: 'selenium-ie-driver'
        exclude module: 'selenium-firefox-driver'
        exclude module: 'selenium-htmlunit-driver'
        exclude module: 'selenium-chrome-driver'
    }
}